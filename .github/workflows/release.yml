name: Release
on:
  release:
    types:
    - released  


env:
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  TAG: ${{ github.event.release.tag_name }}
  DOCKER_IMAGE_TAG: ${{ github.event.release.name }}
  S3_PATH: s3://nr-downloads-main/infrastructure_agent/test

jobs:
  publish-docker-image:
    name: Publish docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME}}
      #     password: ${{ secrets.DOCKER_PASSWORD}}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          tags: {{ env.DOCKER_IMAGE_TAG }}
      - name: Notify failure via Slack
        if: ${{ failure() }}
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_WEBHOOK }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: "Repo: ${{env.REPO_FULL_NAME}}, docker build FAILURE!"

  upload-configuration-files:
    name: Upload configs
    runs-on: ubuntu-latest
    # make sure we built and published the image first
    needs: [publish-docker-image]
    steps:
      - name: upload
        run: |
        echo "aws s3 cp deploy/nri-kube-events.yaml s3://nr-downloads-main/infrastructure_agent/integrations/kubernetes/nri-kube-events-$IMAGE_VERSION.yaml"
        echo "aws s3 cp deploy/nri-kube-events.yaml s3://nr-downloads-main/infrastructure_agent/integrations/kubernetes/nri-kube-events-latest.yaml"
      - name: Notify failure via Slack
        if: ${{ failure() }}
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_WEBHOOK }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: "Repo: ${{env.REPO_FULL_NAME}}, upload configs FAILURE!"
  notify-result:
    name: Notify to slack
    runs-on: ubuntu-latest
    needs: [upload-configuration-files]
    runs-on: ubuntu-latest
    steps:
      - name: Notify sucess via Slack
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_WEBHOOK }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: "Repo: ${{env.REPO_FULL_NAME}}, release SUCCESS!"

