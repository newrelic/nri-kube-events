name: Release

on:
  release:
    types: [ prereleased, released ]

jobs:
  build:
    name: Build integration for
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm64, arm ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build integration
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          echo "${{ github.event.release.tag_name }}" | grep -E '^v[0-9.]*[0-9]$'
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          make compile TAG=${TAG}
      - name: Upload artifact for docker build step
        uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: nri-kube-events-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/nri-kube-events-${{ matrix.goos }}-${{ matrix.goarch }}

  docker-release:
    name: Release docker images and config
    needs: [ build ]
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: newrelic/nri-kube-events
      DOCKER_PLATFORMS: "linux/amd64,linux/arm64,linux/arm" # Must be consistent with the matrix from the job above
    steps:
      - uses: actions/checkout@v3

      - name: Generate docker image version from git tag
        run: |
          echo "${{ github.event.release.tag_name }}" | grep -E '^v[0-9.]*[0-9]$'
          DOCKER_IMAGE_TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')
          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download all artifacts from build job
        uses: actions/download-artifact@v2
        with:
          path: bin

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.FSI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.FSI_DOCKERHUB_TOKEN }}

      - name: Build pre-release image
        if: ${{ github.event.release.prerelease }}
        run: |
          DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}-pre
          docker buildx build --push --platform=$DOCKER_PLATFORMS \
            -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG \
            .
      - name: Push release images
        if: ${{ ! github.event.release.prerelease }}
        run: |
          docker buildx build --push --platform=$DOCKER_PLATFORMS \
            -t $DOCKER_IMAGE_NAME:latest \
            -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG \
            .
