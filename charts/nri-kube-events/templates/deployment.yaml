apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "newrelic.common.naming.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "newrelic.common.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "newrelic.common.naming.name" . }}
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8}}
{{- end }}
      labels:
        {{- include "newrelic.common.labels" . | nindent 8 }}
    spec:
      {{- with include "newrelic.common.images.renderPullSecrets" ( dict "pullSecrets" (list .Values.image.pullSecrets) "context" .) }}
      imagePullSecrets:
        {{- . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.runAsUser | default 1000 }}
        runAsNonRoot: true
      containers:
        - name: kube-events
          image: {{ include "newrelic.common.images.image" ( dict "imageRoot" .Values.image.kubeEvents "context" .) }}
          imagePullPolicy: {{ .Values.image.kubeEvents.pullPolicy }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          args: ["-config", "/app/config/config.yaml", "-loglevel", "debug"]
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
        - name: infra-agent
          image: {{ include "newrelic.common.images.image" ( dict "imageRoot" .Values.image.infraAgent "context" .) }}
          imagePullPolicy: {{ .Values.image.infraAgent.pullPolicy }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 8001
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "newrelic.common.license.secretName" . }}
                  key: {{ include "newrelic.common.license.secretKeyName" . }}
            {{- if (include "newrelic.common.nrStaging" .) }}
            - name: NRIA_STAGING
              value: "true"
            {{- end }}
            {{- with include "newrelic.common.proxy" . }}
            - name: NRIA_PROXY
              value: {{ . | quote }}
            {{- end }}
            # Using FORWARD_ONLY mode to avoid the entity creation for the events.
            - name: NRIA_IS_SECURE_FORWARD_ONLY
              value: "false"
            - name: NRIA_IS_FORWARD_ONLY
              value: "true"
            - name: NRIA_OVERRIDE_HOSTNAME_SHORT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- with include "newrelic.common.customAttributes" . }}
            - name: NRIA_CUSTOM_ATTRIBUTES
              value: {{ fromYaml . | toJson | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: tmpfs-user-data
            - mountPath: /tmp
              name: tmpfs-tmp
            {{- if .Values.config }}
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            {{- end }}
      serviceAccountName: {{ include "newrelic.common.serviceAccount.name" . }}
      volumes:
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ include "newrelic.common.naming.fullname" . }}-agent-config
            items:
            - key: newrelic-infra.yml
              path: newrelic-infra.yml
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ include "newrelic.common.naming.fullname" . }}-config
        - name: tmpfs-data
          emptyDir: {}
        - name: tmpfs-user-data
          emptyDir: {}
        - name: tmpfs-tmp
          emptyDir: {}
      {{- with include "newrelic.common.priorityClassName" . }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with include "newrelic.common.nodeSelector" . }}
      nodeSelector:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "newrelic.common.tolerations" . }}
      tolerations:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "newrelic.common.affinity" . }}
      affinity:
        {{- . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ include "newrelic.common.hostNetwork.value" . }}
      {{- with include "newrelic.common.dnsConfig" . }}
      dnsConfig:
        {{- . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ include "newrelic.common.hostNetwork.value" . }}
      {{- with include "newrelic.common.dnsConfig" . }}
      dnsConfig:
        {{- . | nindent 8 }}
      {{- end }}
