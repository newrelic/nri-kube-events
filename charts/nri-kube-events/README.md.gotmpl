[![Community Plus header](https://github.com/newrelic/opensource-website/raw/master/src/images/categories/Community_Plus.png)](https://opensource.newrelic.com/oss-category/#community-plus)

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

## Values managed globally

This chart implements the [New Relic's common Helm library](https://github.com/newrelic/helm-charts/tree/master/library/common-library) which
means that is has a seamless UX between things that are configurable across different Helm charts.

Here is a list of options that you can set globally and affect all the charts in the `nri-bundle` (and this chart) at the same time while being
able to override the behaviour for this chart only.

| Global keys | Local keys | Default | Merged[<sup>1</sup>](#values-managed-globally-1) | Description |
|-------------|------------|---------|--------------------------------------------------|-------------|
| global.cluster | cluster | `""` |  | Name of the Kubernetes cluster monitored |
| global.licenseKey | licenseKey | `""` |  | This set this license key to use |
| global.customSecretName | customSecretName | `""` |  | In case you don't want to have the license key in you values, this allows you to point to a user created secret to get the key from there |
| global.customSecretLicenseKey | customSecretLicenseKey | `""` |  | In case you don't want to have the license key in you values, this allows you to point to which secret key is the license key located |
| global.podLabels | podLabels | `{}` | yes | Additional labels for chart pods |
| global.labels | labels | `{}` | yes | Additional labels for chart objects |
| global.priorityClassName | priorityClassName | `""` |  | Sets pod's priorityClassName |
| global.hostNetwork | hostNetwork | `false` |  | Sets pod's hostNetwork |
| global.dnsConfig | dnsConfig | `{}` |  | Sets pod's dnsConfig |
| global.images | [See values](#values) | `""` |  | Changes the registry where to get the images. Useful when there is an internal image cache/proxy |
| global.images | [See values](#values) | `[]` |  | Set secrets to be able to fetch images |
| global.podSecurityContext | podSecurityContext | `{}` |  | Sets security context (at pod level) |
| global.containerSecurityContext | containerSecurityContext | `{}` |  | Sets security context (at container level) |
| global.affinity | affinity | `{}` |  | Sets pod/node affinities |
| global.nodeSelector | nodeSelector | `{}` |  | Sets pod's node selector |
| global.tolerations | tolerations | `[]` |  | Sets pod's tolerations to node taints |
| global.serviceAccount.create | serviceAccount.create | `true` |  | Configures if the service account should be created or not |
| global.serviceAccount.name | serviceAccount.name | name of the release |  | Change the name of the service account. This is honored if you disable on this cahrt the creation of the service account so you can use your own. |
| global.serviceAccount.annotations | serviceAccount.annotations | `{}` | yes | Add these annotations to the service account we create |
| global.customAttributes | customAttributes | `{}` |  | Adds extra attributes to the cluster and all the metrics emitted to the backend |
| global.fedramp | fedramp | `false` |  | Enables FedRAMP |
| global.lowDataMode | lowDataMode | `false` |  | Reduces number of metrics sent in order to reduce costs |
| global.privileged | privileged | Depends on the chart |  | In each integration it has different behaviour. See [Further information](#values-managed-globally-3) but all aims to send less metrics to the backend to try to save costs |
| global.proxy | proxy | `""` |  | Configures the integration to send all HTTP/HTTPS request through the proxy in that URL. The URL should have a standard format like `https://user:password@hostname:port` |
| global.nrStaging | nrStaging | `false` |  | Send the metrics to the staging backend. Requires a valid staging license key |
| global.verboseLog | verboseLog | `false` |  | Sets the debug logs to this integration or all integrations if it is set globally |

### Further information
<a name="values-managed-globally-1"></a>
#### 1. Merged

Merged means that the values from global are not replaced by the local ones. Think in this example:
```yaml
global:
  labels:
    global: global
  hostNetwork: true
  nodeSelector:
    global: global

labels:
  local: local
nodeSelector:
  local: local
hostNetwork: false
```

This values will template `hostNetwork` to `false`, a map of labels `{ "global": "global", "local": "local" }` and a `nodeSelector` with
`{ "local": "local" }`.

As Helm by default merges all the maps it could be confusing that we have two behaviours (merging `labels` and replacing `nodeSelector`)
the `values` from global to local. All functions simply replace the value from `global` with the one that is "local" of this chart except
functions that template `labels`, `customAttributes` and service account's annotations. This is the rationale behind of this behavior:
 * `hostNetwork` is templated to `false` because is overriding the value defined globally.
 * `labels` are merged because the user may want to label all the New Relic pods at once and label other solution pods differently for
   clarity' sake.
 * `nodeSelector` does not merge as `labels` because could make harder to overwrite/delete a selector that comes from global because
   of the logic that Helm follows merging maps.

<a name="values-managed-globally-2"></a>
#### 2. Fine grain registries

There are charts that only have 1 image and others that can have 2 or more images. The local path for the registry can change depending
on the chart itself. If you have an advanced configuration that has a proxy cache for the docker registry you should take a look to the
chart's `values.yaml` directly to see where you have to change it if you really need so much granularity that needs a proxy/cache registry
per integration.

<a name="values-managed-globally-3"></a>
#### 3. Privileged mode

By default, from the common library, the privileged mode is set to false. But most of the helm charts require this to be true to fetch more
metrics so could see a true in some charts. The consequences of the privileged mode differ from one chart to another so for the chart that
honors the privileged mode toggle should be a section in the README explaining which is the behavior with it enabled or disabled.


{{ template "chart.valuesSection" . }}

{{ if .Maintainers }}
## Maintainers
{{ range .Maintainers }}
{{- if .Name }}
{{- if .Url }}
* [{{ .Name }}]({{ .Url }})
{{- else }}
* {{ .Name }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
